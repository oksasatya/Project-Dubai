version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:  ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
  redis:
    image: redis:6
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_URI:  ${REDIS_URI}
    command: [ "redis-server", "--requirepass", "${REDIS_URI}" ]
    volumes:
      - redis_data:/data
    networks:
      - app_network

  mongo:
    image: mongo:6
    container_name: mongo_container
    restart: always
    environment:
      MONGO_URI: ${MONGO_URI}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    restart: always
    environment:
      RABBITMQ_URI : ${RABBITMQ_URI}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  user-service:
    build: ./user-service
    container_name: user_service_container
    restart: always
    depends_on:
      - postgres
      - mongo
      - rabbitmq
    networks:
      - app_network

  api-gateway:
    build: ./api-gateway
    container_name: api_gateway_container
    restart: always
    depends_on:
      - user-service
    ports:
      - "8080:8080"
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  mongo_data:
  redis_data:
